extern get_next_token();

static int parse_exp(Expression **expr_p) {
  Expression *expr = *expr_p = new_expression();

  if (Token.class == DIGIT) {
    expr->type = 'D';
    expr->value = Token.repr - '0';
    get_next_token();
  }
  if (Token.class == '(') {
    expr->type = 'P';
    get_next_token();
    if (!Parse_expression(&expr->left)){
        Error("Missing expression");
    }

    if (!Parse_expression(&expr->oper)){
        Error("Missing operator");
    }

    if (!Parse_expression(&expr->right)){
        Error("Missing expression");
    }
    if (Token.class != ')'){
        Error("Missing )");
    }
    get_next_token();
    return 1
  }
}